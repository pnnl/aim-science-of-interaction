/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gov.pnnl.aim.avro.dint;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class POPPiersLOBMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"POPPiersLOBMessage\",\"namespace\":\"gov.pnnl.aim.avro.dint\",\"fields\":[{\"name\":\"company\",\"type\":\"string\"},{\"name\":\"linesofbusiness\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"double\"},{\"name\":\"usermsg\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence company;
  @Deprecated public java.lang.CharSequence linesofbusiness;
  @Deprecated public long date;
  @Deprecated public double score;
  @Deprecated public java.lang.CharSequence usermsg;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public POPPiersLOBMessage() {}

  /**
   * All-args constructor.
   */
  public POPPiersLOBMessage(java.lang.CharSequence company, java.lang.CharSequence linesofbusiness, java.lang.Long date, java.lang.Double score, java.lang.CharSequence usermsg) {
    this.company = company;
    this.linesofbusiness = linesofbusiness;
    this.date = date;
    this.score = score;
    this.usermsg = usermsg;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return company;
    case 1: return linesofbusiness;
    case 2: return date;
    case 3: return score;
    case 4: return usermsg;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: company = (java.lang.CharSequence)value$; break;
    case 1: linesofbusiness = (java.lang.CharSequence)value$; break;
    case 2: date = (java.lang.Long)value$; break;
    case 3: score = (java.lang.Double)value$; break;
    case 4: usermsg = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'company' field.
   */
  public java.lang.CharSequence getCompany() {
    return company;
  }

  /**
   * Sets the value of the 'company' field.
   * @param value the value to set.
   */
  public void setCompany(java.lang.CharSequence value) {
    this.company = value;
  }

  /**
   * Gets the value of the 'linesofbusiness' field.
   */
  public java.lang.CharSequence getLinesofbusiness() {
    return linesofbusiness;
  }

  /**
   * Sets the value of the 'linesofbusiness' field.
   * @param value the value to set.
   */
  public void setLinesofbusiness(java.lang.CharSequence value) {
    this.linesofbusiness = value;
  }

  /**
   * Gets the value of the 'date' field.
   */
  public java.lang.Long getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.Long value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'score' field.
   */
  public java.lang.Double getScore() {
    return score;
  }

  /**
   * Sets the value of the 'score' field.
   * @param value the value to set.
   */
  public void setScore(java.lang.Double value) {
    this.score = value;
  }

  /**
   * Gets the value of the 'usermsg' field.
   */
  public java.lang.CharSequence getUsermsg() {
    return usermsg;
  }

  /**
   * Sets the value of the 'usermsg' field.
   * @param value the value to set.
   */
  public void setUsermsg(java.lang.CharSequence value) {
    this.usermsg = value;
  }

  /** Creates a new POPPiersLOBMessage RecordBuilder */
  public static gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder newBuilder() {
    return new gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder();
  }
  
  /** Creates a new POPPiersLOBMessage RecordBuilder by copying an existing Builder */
  public static gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder newBuilder(gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder other) {
    return new gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder(other);
  }
  
  /** Creates a new POPPiersLOBMessage RecordBuilder by copying an existing POPPiersLOBMessage instance */
  public static gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder newBuilder(gov.pnnl.aim.avro.dint.POPPiersLOBMessage other) {
    return new gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder(other);
  }
  
  /**
   * RecordBuilder for POPPiersLOBMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<POPPiersLOBMessage>
    implements org.apache.avro.data.RecordBuilder<POPPiersLOBMessage> {

    private java.lang.CharSequence company;
    private java.lang.CharSequence linesofbusiness;
    private long date;
    private double score;
    private java.lang.CharSequence usermsg;

    /** Creates a new Builder */
    private Builder() {
      super(gov.pnnl.aim.avro.dint.POPPiersLOBMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.company)) {
        this.company = data().deepCopy(fields()[0].schema(), other.company);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.linesofbusiness)) {
        this.linesofbusiness = data().deepCopy(fields()[1].schema(), other.linesofbusiness);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.date)) {
        this.date = data().deepCopy(fields()[2].schema(), other.date);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.score)) {
        this.score = data().deepCopy(fields()[3].schema(), other.score);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.usermsg)) {
        this.usermsg = data().deepCopy(fields()[4].schema(), other.usermsg);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing POPPiersLOBMessage instance */
    private Builder(gov.pnnl.aim.avro.dint.POPPiersLOBMessage other) {
            super(gov.pnnl.aim.avro.dint.POPPiersLOBMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.company)) {
        this.company = data().deepCopy(fields()[0].schema(), other.company);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.linesofbusiness)) {
        this.linesofbusiness = data().deepCopy(fields()[1].schema(), other.linesofbusiness);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.date)) {
        this.date = data().deepCopy(fields()[2].schema(), other.date);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.score)) {
        this.score = data().deepCopy(fields()[3].schema(), other.score);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.usermsg)) {
        this.usermsg = data().deepCopy(fields()[4].schema(), other.usermsg);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'company' field */
    public java.lang.CharSequence getCompany() {
      return company;
    }
    
    /** Sets the value of the 'company' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder setCompany(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.company = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'company' field has been set */
    public boolean hasCompany() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'company' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder clearCompany() {
      company = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'linesofbusiness' field */
    public java.lang.CharSequence getLinesofbusiness() {
      return linesofbusiness;
    }
    
    /** Sets the value of the 'linesofbusiness' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder setLinesofbusiness(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.linesofbusiness = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'linesofbusiness' field has been set */
    public boolean hasLinesofbusiness() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'linesofbusiness' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder clearLinesofbusiness() {
      linesofbusiness = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'date' field */
    public java.lang.Long getDate() {
      return date;
    }
    
    /** Sets the value of the 'date' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder setDate(long value) {
      validate(fields()[2], value);
      this.date = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'date' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder clearDate() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'score' field */
    public java.lang.Double getScore() {
      return score;
    }
    
    /** Sets the value of the 'score' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder setScore(double value) {
      validate(fields()[3], value);
      this.score = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'score' field has been set */
    public boolean hasScore() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'score' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder clearScore() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'usermsg' field */
    public java.lang.CharSequence getUsermsg() {
      return usermsg;
    }
    
    /** Sets the value of the 'usermsg' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder setUsermsg(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.usermsg = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'usermsg' field has been set */
    public boolean hasUsermsg() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'usermsg' field */
    public gov.pnnl.aim.avro.dint.POPPiersLOBMessage.Builder clearUsermsg() {
      usermsg = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public POPPiersLOBMessage build() {
      try {
        POPPiersLOBMessage record = new POPPiersLOBMessage();
        record.company = fieldSetFlags()[0] ? this.company : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.linesofbusiness = fieldSetFlags()[1] ? this.linesofbusiness : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.date = fieldSetFlags()[2] ? this.date : (java.lang.Long) defaultValue(fields()[2]);
        record.score = fieldSetFlags()[3] ? this.score : (java.lang.Double) defaultValue(fields()[3]);
        record.usermsg = fieldSetFlags()[4] ? this.usermsg : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
