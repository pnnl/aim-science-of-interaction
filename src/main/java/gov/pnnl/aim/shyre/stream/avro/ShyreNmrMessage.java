/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gov.pnnl.aim.shyre.stream.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ShyreNmrMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShyreNmrMessage\",\"namespace\":\"gov.pnnl.aim.shyre.stream.avro\",\"fields\":[{\"name\":\"compound\",\"type\":\"string\"},{\"name\":\"spectra\",\"type\":\"string\"},{\"name\":\"present\",\"type\":\"boolean\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"total\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence compound;
  @Deprecated public java.lang.CharSequence spectra;
  @Deprecated public boolean present;
  @Deprecated public int count;
  @Deprecated public int total;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ShyreNmrMessage() {}

  /**
   * All-args constructor.
   */
  public ShyreNmrMessage(java.lang.CharSequence compound, java.lang.CharSequence spectra, java.lang.Boolean present, java.lang.Integer count, java.lang.Integer total) {
    this.compound = compound;
    this.spectra = spectra;
    this.present = present;
    this.count = count;
    this.total = total;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return compound;
    case 1: return spectra;
    case 2: return present;
    case 3: return count;
    case 4: return total;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: compound = (java.lang.CharSequence)value$; break;
    case 1: spectra = (java.lang.CharSequence)value$; break;
    case 2: present = (java.lang.Boolean)value$; break;
    case 3: count = (java.lang.Integer)value$; break;
    case 4: total = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'compound' field.
   */
  public java.lang.CharSequence getCompound() {
    return compound;
  }

  /**
   * Sets the value of the 'compound' field.
   * @param value the value to set.
   */
  public void setCompound(java.lang.CharSequence value) {
    this.compound = value;
  }

  /**
   * Gets the value of the 'spectra' field.
   */
  public java.lang.CharSequence getSpectra() {
    return spectra;
  }

  /**
   * Sets the value of the 'spectra' field.
   * @param value the value to set.
   */
  public void setSpectra(java.lang.CharSequence value) {
    this.spectra = value;
  }

  /**
   * Gets the value of the 'present' field.
   */
  public java.lang.Boolean getPresent() {
    return present;
  }

  /**
   * Sets the value of the 'present' field.
   * @param value the value to set.
   */
  public void setPresent(java.lang.Boolean value) {
    this.present = value;
  }

  /**
   * Gets the value of the 'count' field.
   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * @param value the value to set.
   */
  public void setCount(java.lang.Integer value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'total' field.
   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.total = value;
  }

  /** Creates a new ShyreNmrMessage RecordBuilder */
  public static gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder newBuilder() {
    return new gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder();
  }
  
  /** Creates a new ShyreNmrMessage RecordBuilder by copying an existing Builder */
  public static gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder newBuilder(gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder other) {
    return new gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder(other);
  }
  
  /** Creates a new ShyreNmrMessage RecordBuilder by copying an existing ShyreNmrMessage instance */
  public static gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder newBuilder(gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage other) {
    return new gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder(other);
  }
  
  /**
   * RecordBuilder for ShyreNmrMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShyreNmrMessage>
    implements org.apache.avro.data.RecordBuilder<ShyreNmrMessage> {

    private java.lang.CharSequence compound;
    private java.lang.CharSequence spectra;
    private boolean present;
    private int count;
    private int total;

    /** Creates a new Builder */
    private Builder() {
      super(gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.compound)) {
        this.compound = data().deepCopy(fields()[0].schema(), other.compound);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.spectra)) {
        this.spectra = data().deepCopy(fields()[1].schema(), other.spectra);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.present)) {
        this.present = data().deepCopy(fields()[2].schema(), other.present);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.count)) {
        this.count = data().deepCopy(fields()[3].schema(), other.count);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.total)) {
        this.total = data().deepCopy(fields()[4].schema(), other.total);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ShyreNmrMessage instance */
    private Builder(gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage other) {
            super(gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.compound)) {
        this.compound = data().deepCopy(fields()[0].schema(), other.compound);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.spectra)) {
        this.spectra = data().deepCopy(fields()[1].schema(), other.spectra);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.present)) {
        this.present = data().deepCopy(fields()[2].schema(), other.present);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.count)) {
        this.count = data().deepCopy(fields()[3].schema(), other.count);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.total)) {
        this.total = data().deepCopy(fields()[4].schema(), other.total);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'compound' field */
    public java.lang.CharSequence getCompound() {
      return compound;
    }
    
    /** Sets the value of the 'compound' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder setCompound(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.compound = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'compound' field has been set */
    public boolean hasCompound() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'compound' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder clearCompound() {
      compound = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'spectra' field */
    public java.lang.CharSequence getSpectra() {
      return spectra;
    }
    
    /** Sets the value of the 'spectra' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder setSpectra(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.spectra = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'spectra' field has been set */
    public boolean hasSpectra() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'spectra' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder clearSpectra() {
      spectra = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'present' field */
    public java.lang.Boolean getPresent() {
      return present;
    }
    
    /** Sets the value of the 'present' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder setPresent(boolean value) {
      validate(fields()[2], value);
      this.present = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'present' field has been set */
    public boolean hasPresent() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'present' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder clearPresent() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Integer getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder setCount(int value) {
      validate(fields()[3], value);
      this.count = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'count' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder clearCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Integer getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder setTotal(int value) {
      validate(fields()[4], value);
      this.total = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'total' field */
    public gov.pnnl.aim.shyre.stream.avro.ShyreNmrMessage.Builder clearTotal() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public ShyreNmrMessage build() {
      try {
        ShyreNmrMessage record = new ShyreNmrMessage();
        record.compound = fieldSetFlags()[0] ? this.compound : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.spectra = fieldSetFlags()[1] ? this.spectra : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.present = fieldSetFlags()[2] ? this.present : (java.lang.Boolean) defaultValue(fields()[2]);
        record.count = fieldSetFlags()[3] ? this.count : (java.lang.Integer) defaultValue(fields()[3]);
        record.total = fieldSetFlags()[4] ? this.total : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
