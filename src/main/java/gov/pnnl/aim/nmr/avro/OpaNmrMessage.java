/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gov.pnnl.aim.nmr.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OpaNmrMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OpaNmrMessage\",\"namespace\":\"gov.pnnl.aim.nmr.avro\",\"fields\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"uuid\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"string\"},{\"name\":\"fileName\",\"type\":\"string\"},{\"name\":\"rowNumber\",\"type\":\"int\"},{\"name\":\"runNumber\",\"type\":\"int\"},{\"name\":\"probabilities\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"abundances\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int version;
  @Deprecated public java.lang.CharSequence uuid;
  @Deprecated public java.lang.CharSequence timestamp;
  @Deprecated public java.lang.CharSequence fileName;
  @Deprecated public int rowNumber;
  @Deprecated public int runNumber;
  @Deprecated public java.util.List<java.lang.Double> probabilities;
  @Deprecated public java.util.List<java.lang.Double> abundances;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public OpaNmrMessage() {}

  /**
   * All-args constructor.
   */
  public OpaNmrMessage(java.lang.Integer version, java.lang.CharSequence uuid, java.lang.CharSequence timestamp, java.lang.CharSequence fileName, java.lang.Integer rowNumber, java.lang.Integer runNumber, java.util.List<java.lang.Double> probabilities, java.util.List<java.lang.Double> abundances) {
    this.version = version;
    this.uuid = uuid;
    this.timestamp = timestamp;
    this.fileName = fileName;
    this.rowNumber = rowNumber;
    this.runNumber = runNumber;
    this.probabilities = probabilities;
    this.abundances = abundances;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return version;
    case 1: return uuid;
    case 2: return timestamp;
    case 3: return fileName;
    case 4: return rowNumber;
    case 5: return runNumber;
    case 6: return probabilities;
    case 7: return abundances;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: version = (java.lang.Integer)value$; break;
    case 1: uuid = (java.lang.CharSequence)value$; break;
    case 2: timestamp = (java.lang.CharSequence)value$; break;
    case 3: fileName = (java.lang.CharSequence)value$; break;
    case 4: rowNumber = (java.lang.Integer)value$; break;
    case 5: runNumber = (java.lang.Integer)value$; break;
    case 6: probabilities = (java.util.List<java.lang.Double>)value$; break;
    case 7: abundances = (java.util.List<java.lang.Double>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'fileName' field.
   */
  public java.lang.CharSequence getFileName() {
    return fileName;
  }

  /**
   * Sets the value of the 'fileName' field.
   * @param value the value to set.
   */
  public void setFileName(java.lang.CharSequence value) {
    this.fileName = value;
  }

  /**
   * Gets the value of the 'rowNumber' field.
   */
  public java.lang.Integer getRowNumber() {
    return rowNumber;
  }

  /**
   * Sets the value of the 'rowNumber' field.
   * @param value the value to set.
   */
  public void setRowNumber(java.lang.Integer value) {
    this.rowNumber = value;
  }

  /**
   * Gets the value of the 'runNumber' field.
   */
  public java.lang.Integer getRunNumber() {
    return runNumber;
  }

  /**
   * Sets the value of the 'runNumber' field.
   * @param value the value to set.
   */
  public void setRunNumber(java.lang.Integer value) {
    this.runNumber = value;
  }

  /**
   * Gets the value of the 'probabilities' field.
   */
  public java.util.List<java.lang.Double> getProbabilities() {
    return probabilities;
  }

  /**
   * Sets the value of the 'probabilities' field.
   * @param value the value to set.
   */
  public void setProbabilities(java.util.List<java.lang.Double> value) {
    this.probabilities = value;
  }

  /**
   * Gets the value of the 'abundances' field.
   */
  public java.util.List<java.lang.Double> getAbundances() {
    return abundances;
  }

  /**
   * Sets the value of the 'abundances' field.
   * @param value the value to set.
   */
  public void setAbundances(java.util.List<java.lang.Double> value) {
    this.abundances = value;
  }

  /** Creates a new OpaNmrMessage RecordBuilder */
  public static gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder newBuilder() {
    return new gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder();
  }
  
  /** Creates a new OpaNmrMessage RecordBuilder by copying an existing Builder */
  public static gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder newBuilder(gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder other) {
    return new gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder(other);
  }
  
  /** Creates a new OpaNmrMessage RecordBuilder by copying an existing OpaNmrMessage instance */
  public static gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder newBuilder(gov.pnnl.aim.nmr.avro.OpaNmrMessage other) {
    return new gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder(other);
  }
  
  /**
   * RecordBuilder for OpaNmrMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OpaNmrMessage>
    implements org.apache.avro.data.RecordBuilder<OpaNmrMessage> {

    private int version;
    private java.lang.CharSequence uuid;
    private java.lang.CharSequence timestamp;
    private java.lang.CharSequence fileName;
    private int rowNumber;
    private int runNumber;
    private java.util.List<java.lang.Double> probabilities;
    private java.util.List<java.lang.Double> abundances;

    /** Creates a new Builder */
    private Builder() {
      super(gov.pnnl.aim.nmr.avro.OpaNmrMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fileName)) {
        this.fileName = data().deepCopy(fields()[3].schema(), other.fileName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rowNumber)) {
        this.rowNumber = data().deepCopy(fields()[4].schema(), other.rowNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.runNumber)) {
        this.runNumber = data().deepCopy(fields()[5].schema(), other.runNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.probabilities)) {
        this.probabilities = data().deepCopy(fields()[6].schema(), other.probabilities);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.abundances)) {
        this.abundances = data().deepCopy(fields()[7].schema(), other.abundances);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing OpaNmrMessage instance */
    private Builder(gov.pnnl.aim.nmr.avro.OpaNmrMessage other) {
            super(gov.pnnl.aim.nmr.avro.OpaNmrMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fileName)) {
        this.fileName = data().deepCopy(fields()[3].schema(), other.fileName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rowNumber)) {
        this.rowNumber = data().deepCopy(fields()[4].schema(), other.rowNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.runNumber)) {
        this.runNumber = data().deepCopy(fields()[5].schema(), other.runNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.probabilities)) {
        this.probabilities = data().deepCopy(fields()[6].schema(), other.probabilities);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.abundances)) {
        this.abundances = data().deepCopy(fields()[7].schema(), other.abundances);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'version' field */
    public java.lang.Integer getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setVersion(int value) {
      validate(fields()[0], value);
      this.version = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'version' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearVersion() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'uuid' field */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }
    
    /** Sets the value of the 'uuid' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.uuid = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'uuid' field has been set */
    public boolean hasUuid() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'uuid' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timestamp' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'fileName' field */
    public java.lang.CharSequence getFileName() {
      return fileName;
    }
    
    /** Sets the value of the 'fileName' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setFileName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.fileName = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'fileName' field has been set */
    public boolean hasFileName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'fileName' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearFileName() {
      fileName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'rowNumber' field */
    public java.lang.Integer getRowNumber() {
      return rowNumber;
    }
    
    /** Sets the value of the 'rowNumber' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setRowNumber(int value) {
      validate(fields()[4], value);
      this.rowNumber = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'rowNumber' field has been set */
    public boolean hasRowNumber() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'rowNumber' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearRowNumber() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'runNumber' field */
    public java.lang.Integer getRunNumber() {
      return runNumber;
    }
    
    /** Sets the value of the 'runNumber' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setRunNumber(int value) {
      validate(fields()[5], value);
      this.runNumber = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'runNumber' field has been set */
    public boolean hasRunNumber() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'runNumber' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearRunNumber() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'probabilities' field */
    public java.util.List<java.lang.Double> getProbabilities() {
      return probabilities;
    }
    
    /** Sets the value of the 'probabilities' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setProbabilities(java.util.List<java.lang.Double> value) {
      validate(fields()[6], value);
      this.probabilities = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'probabilities' field has been set */
    public boolean hasProbabilities() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'probabilities' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearProbabilities() {
      probabilities = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'abundances' field */
    public java.util.List<java.lang.Double> getAbundances() {
      return abundances;
    }
    
    /** Sets the value of the 'abundances' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder setAbundances(java.util.List<java.lang.Double> value) {
      validate(fields()[7], value);
      this.abundances = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'abundances' field has been set */
    public boolean hasAbundances() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'abundances' field */
    public gov.pnnl.aim.nmr.avro.OpaNmrMessage.Builder clearAbundances() {
      abundances = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public OpaNmrMessage build() {
      try {
        OpaNmrMessage record = new OpaNmrMessage();
        record.version = fieldSetFlags()[0] ? this.version : (java.lang.Integer) defaultValue(fields()[0]);
        record.uuid = fieldSetFlags()[1] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.fileName = fieldSetFlags()[3] ? this.fileName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.rowNumber = fieldSetFlags()[4] ? this.rowNumber : (java.lang.Integer) defaultValue(fields()[4]);
        record.runNumber = fieldSetFlags()[5] ? this.runNumber : (java.lang.Integer) defaultValue(fields()[5]);
        record.probabilities = fieldSetFlags()[6] ? this.probabilities : (java.util.List<java.lang.Double>) defaultValue(fields()[6]);
        record.abundances = fieldSetFlags()[7] ? this.abundances : (java.util.List<java.lang.Double>) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
