/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gov.pnnl.aim.discovery.streams.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CompoundsMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CompoundsMessage\",\"namespace\":\"gov.pnnl.aim.discovery.streams.avro\",\"fields\":[{\"name\":\"spectrum\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"fits\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FitMessage\",\"fields\":[{\"name\":\"compound\",\"type\":\"string\"},{\"name\":\"opaRank\",\"type\":\"string\"},{\"name\":\"shyreRank\",\"type\":\"string\"},{\"name\":\"fit\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.Double> spectrum;
  @Deprecated public java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> fits;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CompoundsMessage() {}

  /**
   * All-args constructor.
   */
  public CompoundsMessage(java.util.List<java.lang.Double> spectrum, java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> fits) {
    this.spectrum = spectrum;
    this.fits = fits;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return spectrum;
    case 1: return fits;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: spectrum = (java.util.List<java.lang.Double>)value$; break;
    case 1: fits = (java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'spectrum' field.
   */
  public java.util.List<java.lang.Double> getSpectrum() {
    return spectrum;
  }

  /**
   * Sets the value of the 'spectrum' field.
   * @param value the value to set.
   */
  public void setSpectrum(java.util.List<java.lang.Double> value) {
    this.spectrum = value;
  }

  /**
   * Gets the value of the 'fits' field.
   */
  public java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> getFits() {
    return fits;
  }

  /**
   * Sets the value of the 'fits' field.
   * @param value the value to set.
   */
  public void setFits(java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> value) {
    this.fits = value;
  }

  /** Creates a new CompoundsMessage RecordBuilder */
  public static gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder newBuilder() {
    return new gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder();
  }
  
  /** Creates a new CompoundsMessage RecordBuilder by copying an existing Builder */
  public static gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder newBuilder(gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder other) {
    return new gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder(other);
  }
  
  /** Creates a new CompoundsMessage RecordBuilder by copying an existing CompoundsMessage instance */
  public static gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder newBuilder(gov.pnnl.aim.discovery.streams.avro.CompoundsMessage other) {
    return new gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder(other);
  }
  
  /**
   * RecordBuilder for CompoundsMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CompoundsMessage>
    implements org.apache.avro.data.RecordBuilder<CompoundsMessage> {

    private java.util.List<java.lang.Double> spectrum;
    private java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> fits;

    /** Creates a new Builder */
    private Builder() {
      super(gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.spectrum)) {
        this.spectrum = data().deepCopy(fields()[0].schema(), other.spectrum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fits)) {
        this.fits = data().deepCopy(fields()[1].schema(), other.fits);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CompoundsMessage instance */
    private Builder(gov.pnnl.aim.discovery.streams.avro.CompoundsMessage other) {
            super(gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.spectrum)) {
        this.spectrum = data().deepCopy(fields()[0].schema(), other.spectrum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fits)) {
        this.fits = data().deepCopy(fields()[1].schema(), other.fits);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'spectrum' field */
    public java.util.List<java.lang.Double> getSpectrum() {
      return spectrum;
    }
    
    /** Sets the value of the 'spectrum' field */
    public gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder setSpectrum(java.util.List<java.lang.Double> value) {
      validate(fields()[0], value);
      this.spectrum = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'spectrum' field has been set */
    public boolean hasSpectrum() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'spectrum' field */
    public gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder clearSpectrum() {
      spectrum = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'fits' field */
    public java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> getFits() {
      return fits;
    }
    
    /** Sets the value of the 'fits' field */
    public gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder setFits(java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage> value) {
      validate(fields()[1], value);
      this.fits = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'fits' field has been set */
    public boolean hasFits() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'fits' field */
    public gov.pnnl.aim.discovery.streams.avro.CompoundsMessage.Builder clearFits() {
      fits = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public CompoundsMessage build() {
      try {
        CompoundsMessage record = new CompoundsMessage();
        record.spectrum = fieldSetFlags()[0] ? this.spectrum : (java.util.List<java.lang.Double>) defaultValue(fields()[0]);
        record.fits = fieldSetFlags()[1] ? this.fits : (java.util.List<gov.pnnl.aim.discovery.streams.avro.FitMessage>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
