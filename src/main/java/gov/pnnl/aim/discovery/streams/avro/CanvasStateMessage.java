/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package gov.pnnl.aim.discovery.streams.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CanvasStateMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CanvasStateMessage\",\"namespace\":\"gov.pnnl.aim.discovery.streams.avro\",\"fields\":[{\"name\":\"canvas\",\"type\":\"string\"},{\"name\":\"interaction\",\"type\":\"string\"},{\"name\":\"docs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DocVector\",\"fields\":[{\"name\":\"docid\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"vector\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence canvas;
  @Deprecated public java.lang.CharSequence interaction;
  @Deprecated public java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> docs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CanvasStateMessage() {}

  /**
   * All-args constructor.
   */
  public CanvasStateMessage(java.lang.CharSequence canvas, java.lang.CharSequence interaction, java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> docs) {
    this.canvas = canvas;
    this.interaction = interaction;
    this.docs = docs;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return canvas;
    case 1: return interaction;
    case 2: return docs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: canvas = (java.lang.CharSequence)value$; break;
    case 1: interaction = (java.lang.CharSequence)value$; break;
    case 2: docs = (java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'canvas' field.
   */
  public java.lang.CharSequence getCanvas() {
    return canvas;
  }

  /**
   * Sets the value of the 'canvas' field.
   * @param value the value to set.
   */
  public void setCanvas(java.lang.CharSequence value) {
    this.canvas = value;
  }

  /**
   * Gets the value of the 'interaction' field.
   */
  public java.lang.CharSequence getInteraction() {
    return interaction;
  }

  /**
   * Sets the value of the 'interaction' field.
   * @param value the value to set.
   */
  public void setInteraction(java.lang.CharSequence value) {
    this.interaction = value;
  }

  /**
   * Gets the value of the 'docs' field.
   */
  public java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> getDocs() {
    return docs;
  }

  /**
   * Sets the value of the 'docs' field.
   * @param value the value to set.
   */
  public void setDocs(java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> value) {
    this.docs = value;
  }

  /** Creates a new CanvasStateMessage RecordBuilder */
  public static gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder newBuilder() {
    return new gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder();
  }
  
  /** Creates a new CanvasStateMessage RecordBuilder by copying an existing Builder */
  public static gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder newBuilder(gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder other) {
    return new gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder(other);
  }
  
  /** Creates a new CanvasStateMessage RecordBuilder by copying an existing CanvasStateMessage instance */
  public static gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder newBuilder(gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage other) {
    return new gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder(other);
  }
  
  /**
   * RecordBuilder for CanvasStateMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CanvasStateMessage>
    implements org.apache.avro.data.RecordBuilder<CanvasStateMessage> {

    private java.lang.CharSequence canvas;
    private java.lang.CharSequence interaction;
    private java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> docs;

    /** Creates a new Builder */
    private Builder() {
      super(gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.canvas)) {
        this.canvas = data().deepCopy(fields()[0].schema(), other.canvas);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.interaction)) {
        this.interaction = data().deepCopy(fields()[1].schema(), other.interaction);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.docs)) {
        this.docs = data().deepCopy(fields()[2].schema(), other.docs);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CanvasStateMessage instance */
    private Builder(gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage other) {
            super(gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.canvas)) {
        this.canvas = data().deepCopy(fields()[0].schema(), other.canvas);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.interaction)) {
        this.interaction = data().deepCopy(fields()[1].schema(), other.interaction);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.docs)) {
        this.docs = data().deepCopy(fields()[2].schema(), other.docs);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'canvas' field */
    public java.lang.CharSequence getCanvas() {
      return canvas;
    }
    
    /** Sets the value of the 'canvas' field */
    public gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder setCanvas(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.canvas = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'canvas' field has been set */
    public boolean hasCanvas() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'canvas' field */
    public gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder clearCanvas() {
      canvas = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'interaction' field */
    public java.lang.CharSequence getInteraction() {
      return interaction;
    }
    
    /** Sets the value of the 'interaction' field */
    public gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder setInteraction(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.interaction = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'interaction' field has been set */
    public boolean hasInteraction() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'interaction' field */
    public gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder clearInteraction() {
      interaction = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'docs' field */
    public java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> getDocs() {
      return docs;
    }
    
    /** Sets the value of the 'docs' field */
    public gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder setDocs(java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector> value) {
      validate(fields()[2], value);
      this.docs = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'docs' field has been set */
    public boolean hasDocs() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'docs' field */
    public gov.pnnl.aim.discovery.streams.avro.CanvasStateMessage.Builder clearDocs() {
      docs = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public CanvasStateMessage build() {
      try {
        CanvasStateMessage record = new CanvasStateMessage();
        record.canvas = fieldSetFlags()[0] ? this.canvas : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.interaction = fieldSetFlags()[1] ? this.interaction : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.docs = fieldSetFlags()[2] ? this.docs : (java.util.List<gov.pnnl.aim.discovery.streams.avro.DocVector>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
